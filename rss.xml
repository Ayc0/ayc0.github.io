<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Projects by Ayc0</title><description>Various personal projects (finished or not), and all the blog posts I wrote</description><link>https://ayc0.github.io/</link><item><title>Intl.Segmenter(): Don&apos;t use string.split() nor string.length</title><link>https://ayc0.github.io/posts/others/intlsegmenter-dont-use-stringsplit-nor-stringlength/</link><guid isPermaLink="true">https://ayc0.github.io/posts/others/intlsegmenter-dont-use-stringsplit-nor-stringlength/</guid></item><item><title>TypeScript 5.0: new mode bundler &amp; ESM</title><link>https://ayc0.github.io/posts/typescript/typescript-50-new-mode-bundler-esm/</link><guid isPermaLink="true">https://ayc0.github.io/posts/typescript/typescript-50-new-mode-bundler-esm/</guid></item><item><title>How does CSS work? The specificity</title><link>https://ayc0.github.io/posts/css/how-does-css-work-the-specificity/</link><guid isPermaLink="true">https://ayc0.github.io/posts/css/how-does-css-work-the-specificity/</guid></item><item><title>How to learn CSS with games</title><link>https://ayc0.github.io/posts/css/how-to-learn-css-with-games/</link><guid isPermaLink="true">https://ayc0.github.io/posts/css/how-to-learn-css-with-games/</guid></item><item><title>CSS :before vs ::before &amp; :after vs ::after</title><link>https://ayc0.github.io/posts/css/css-before-vs-before/</link><guid isPermaLink="true">https://ayc0.github.io/posts/css/css-before-vs-before/</guid></item><item><title>CRA vs Parcel</title><link>https://ayc0.github.io/posts/others/cra-vs-parcel/</link><guid isPermaLink="true">https://ayc0.github.io/posts/others/cra-vs-parcel/</guid></item><item><title>Light/dark mode: Corrections</title><link>https://ayc0.github.io/posts/dark-mode/light-dark-mode-corrections/</link><guid isPermaLink="true">https://ayc0.github.io/posts/dark-mode/light-dark-mode-corrections/</guid></item><item><title>Light/dark mode: React implementation</title><link>https://ayc0.github.io/posts/dark-mode/light-dark-mode-react-implementation/</link><guid isPermaLink="true">https://ayc0.github.io/posts/dark-mode/light-dark-mode-react-implementation/</guid></item><item><title>Light/dark mode: system mode + user preferences</title><link>https://ayc0.github.io/posts/dark-mode/light-dark-mode-system-mode-user-preferences/</link><guid isPermaLink="true">https://ayc0.github.io/posts/dark-mode/light-dark-mode-system-mode-user-preferences/</guid></item><item><title>Light/dark mode: the lazy way</title><link>https://ayc0.github.io/posts/dark-mode/light-dark-mode-the-lazy-way/</link><guid isPermaLink="true">https://ayc0.github.io/posts/dark-mode/light-dark-mode-the-lazy-way/</guid></item><item><title>Light/dark mode: avoid flickering on reload</title><link>https://ayc0.github.io/posts/dark-mode/light-dark-mode-avoid-flickering-on-reload/</link><guid isPermaLink="true">https://ayc0.github.io/posts/dark-mode/light-dark-mode-avoid-flickering-on-reload/</guid></item><item><title>Light/dark mode: user input</title><link>https://ayc0.github.io/posts/dark-mode/light-dark-mode-user-input/</link><guid isPermaLink="true">https://ayc0.github.io/posts/dark-mode/light-dark-mode-user-input/</guid></item><item><title>TypeScript 4.9: satisfies operator</title><link>https://ayc0.github.io/posts/typescript/typescript-49-satisfies-operator/</link><guid isPermaLink="true">https://ayc0.github.io/posts/typescript/typescript-49-satisfies-operator/</guid></item><item><title>Proper cross-fade in CSS</title><link>https://ayc0.github.io/posts/css/proper-cross-fade-in-css/</link><guid isPermaLink="true">https://ayc0.github.io/posts/css/proper-cross-fade-in-css/</guid></item><item><title>Semver: The unknown buildMetadata</title><link>https://ayc0.github.io/posts/others/semver-the-unknown-parts/</link><guid isPermaLink="true">https://ayc0.github.io/posts/others/semver-the-unknown-parts/</guid></item><item><title>Yarn.lock: How to Read it</title><link>https://ayc0.github.io/posts/yarn/yarn-lock-how-to-read-it/</link><guid isPermaLink="true">https://ayc0.github.io/posts/yarn/yarn-lock-how-to-read-it/</guid></item><item><title>Yarn.lock: How to Update it</title><link>https://ayc0.github.io/posts/yarn/yarn-lock-how-to-update-it/</link><guid isPermaLink="true">https://ayc0.github.io/posts/yarn/yarn-lock-how-to-update-it/</guid></item><item><title>Light/dark mode: the simple way</title><link>https://ayc0.github.io/posts/dark-mode/light-dark-mode-the-simple-way/</link><guid isPermaLink="true">https://ayc0.github.io/posts/dark-mode/light-dark-mode-the-simple-way/</guid></item><item><title>Responsive design in React</title><link>https://ayc0.github.io/posts/react/responsive-design-in-react/</link><guid isPermaLink="true">https://ayc0.github.io/posts/react/responsive-design-in-react/</guid></item><item><title>@blocz/react-responsive v3 is out</title><link>https://ayc0.github.io/posts/others/blocz-react-responsive-v3-is-out/</link><guid isPermaLink="true">https://ayc0.github.io/posts/others/blocz-react-responsive-v3-is-out/</guid></item><item><title>React refs and dom references</title><link>https://ayc0.github.io/posts/react/react-refs-and-dom-references/</link><guid isPermaLink="true">https://ayc0.github.io/posts/react/react-refs-and-dom-references/</guid></item><item><title>Migrating class components to hooks â€“ rules</title><link>https://ayc0.github.io/posts/react/migrating-class-components-to-hooks-rules/</link><guid isPermaLink="true">https://ayc0.github.io/posts/react/migrating-class-components-to-hooks-rules/</guid></item><item><title>Migrating class components to hooks</title><link>https://ayc0.github.io/posts/react/migrating-class-components-to-hooks/</link><guid isPermaLink="true">https://ayc0.github.io/posts/react/migrating-class-components-to-hooks/</guid></item></channel></rss>