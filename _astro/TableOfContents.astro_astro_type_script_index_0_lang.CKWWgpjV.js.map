{"version":3,"file":"TableOfContents.astro_astro_type_script_index_0_lang.CKWWgpjV.js","sources":["../../node_modules/.pnpm/@astrojs+starlight@0.36.0_astro@5.13.10_@azure+identity@4.12.0_@types+node@24.5.2_rollu_2314de972fdce71ede8e7475e2feee89/node_modules/@astrojs/starlight/constants.ts","../../node_modules/.pnpm/@astrojs+starlight@0.36.0_astro@5.13.10_@azure+identity@4.12.0_@types+node@24.5.2_rollu_2314de972fdce71ede8e7475e2feee89/node_modules/@astrojs/starlight/components/TableOfContents/starlight-toc.ts"],"sourcesContent":["// N.B. THIS FILE IS IMPORTED IN BOTH SERVER- AND CLIENT-SIDE CODE.\n// THINK TWICE BEFORE ADDING STUFF AS IT WILL GET SHIPPED TO THE CLIENT.\n\nexport const PAGE_TITLE_ID = '_top';\n","import { PAGE_TITLE_ID } from '../../constants';\n\nexport class StarlightTOC extends HTMLElement {\n\tprivate _current = this.querySelector<HTMLAnchorElement>('a[aria-current=\"true\"]');\n\tprivate minH = parseInt(this.dataset.minH || '2', 10);\n\tprivate maxH = parseInt(this.dataset.maxH || '3', 10);\n\n\tprotected set current(link: HTMLAnchorElement) {\n\t\tif (link === this._current) return;\n\t\tif (this._current) this._current.removeAttribute('aria-current');\n\t\tlink.setAttribute('aria-current', 'true');\n\t\tthis._current = link;\n\t}\n\n\tprivate onIdle = (cb: IdleRequestCallback) =>\n\t\t(window.requestIdleCallback || ((cb) => setTimeout(cb, 1)))(cb);\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.onIdle(() => this.init());\n\t}\n\n\tprivate init = (): void => {\n\t\t/** All the links in the table of contents. */\n\t\tconst links = [...this.querySelectorAll('a')];\n\n\t\t/** Test if an element is a table-of-contents heading. */\n\t\tconst isHeading = (el: Element): el is HTMLHeadingElement => {\n\t\t\tif (el instanceof HTMLHeadingElement) {\n\t\t\t\t// Special case for page title h1\n\t\t\t\tif (el.id === PAGE_TITLE_ID) return true;\n\t\t\t\t// Check the heading level is within the user-configured limits for the ToC\n\t\t\t\tconst level = el.tagName[1];\n\t\t\t\tif (level) {\n\t\t\t\t\tconst int = parseInt(level, 10);\n\t\t\t\t\tif (int >= this.minH && int <= this.maxH) return true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\t/** Walk up the DOM to find the nearest heading. */\n\t\tconst getElementHeading = (el: Element | null): HTMLHeadingElement | null => {\n\t\t\tif (!el) return null;\n\t\t\tconst origin = el;\n\t\t\twhile (el) {\n\t\t\t\tif (isHeading(el)) return el;\n\t\t\t\t// Assign the previous siblingâ€™s last, most deeply nested child to el.\n\t\t\t\tel = el.previousElementSibling;\n\t\t\t\twhile (el?.lastElementChild) {\n\t\t\t\t\tel = el.lastElementChild;\n\t\t\t\t}\n\t\t\t\t// Look for headings amongst siblings.\n\t\t\t\tconst h = getElementHeading(el);\n\t\t\t\tif (h) return h;\n\t\t\t}\n\t\t\t// Walk back up the parent.\n\t\t\treturn getElementHeading(origin.parentElement);\n\t\t};\n\n\t\t/** Handle intersections and set the current link to the heading for the current intersection. */\n\t\tconst setCurrent: IntersectionObserverCallback = (entries) => {\n\t\t\tfor (const { isIntersecting, target } of entries) {\n\t\t\t\tif (!isIntersecting) continue;\n\t\t\t\tconst heading = getElementHeading(target);\n\t\t\t\tif (!heading) continue;\n\t\t\t\tconst link = links.find((link) => link.hash === '#' + encodeURIComponent(heading.id));\n\t\t\t\tif (link) {\n\t\t\t\t\tthis.current = link;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Observe elements with an `id` (most likely headings) and their siblings.\n\t\t// Also observe direct children of `.content` to include elements before\n\t\t// the first heading.\n\t\tconst toObserve = document.querySelectorAll('main [id], main [id] ~ *, main .content > *');\n\n\t\tlet observer: IntersectionObserver | undefined;\n\t\tconst observe = () => {\n\t\t\tif (observer) return;\n\t\t\tobserver = new IntersectionObserver(setCurrent, { rootMargin: this.getRootMargin() });\n\t\t\ttoObserve.forEach((h) => observer!.observe(h));\n\t\t};\n\t\tobserve();\n\n\t\tlet timeout: NodeJS.Timeout;\n\t\twindow.addEventListener('resize', () => {\n\t\t\t// Disable intersection observer while window is resizing.\n\t\t\tif (observer) {\n\t\t\t\tobserver.disconnect();\n\t\t\t\tobserver = undefined;\n\t\t\t}\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(() => this.onIdle(observe), 200);\n\t\t});\n\t};\n\n\tprivate getRootMargin(): `-${number}px 0% ${number}px` {\n\t\tconst navBarHeight = document.querySelector('header')?.getBoundingClientRect().height || 0;\n\t\t// `<summary>` only exists in mobile ToC, so will fall back to 0 in large viewport component.\n\t\tconst mobileTocHeight = this.querySelector('summary')?.getBoundingClientRect().height || 0;\n\t\t/** Start intersections at nav height + 2rem padding. */\n\t\tconst top = navBarHeight + mobileTocHeight + 32;\n\t\t/** End intersections `53px` later. This is slightly more than the maximum `margin-top` in Markdown content. */\n\t\tconst bottom = top + 53;\n\t\tconst height = document.documentElement.clientHeight;\n\t\treturn `-${top}px 0% ${bottom - height}px`;\n\t}\n}\n\ncustomElements.define('starlight-toc', StarlightTOC);\n"],"names":["PAGE_TITLE_ID","StarlightTOC","cb","links","isHeading","el","level","int","getElementHeading","origin","h","setCurrent","entries","isIntersecting","target","heading","link","toObserve","observer","observe","timeout","navBarHeight","mobileTocHeight","top","bottom","height"],"mappings":"AAGO,MAAMA,EAAgB,OCDtB,MAAMC,UAAqB,WAAY,CAe7C,aAAc,CACb,MAAA,EAfD,KAAQ,SAAW,KAAK,cAAiC,wBAAwB,EACjF,KAAQ,KAAO,SAAS,KAAK,QAAQ,MAAQ,IAAK,EAAE,EACpD,KAAQ,KAAO,SAAS,KAAK,QAAQ,MAAQ,IAAK,EAAE,EASpD,KAAQ,OAAUC,IAChB,OAAO,sBAAyBA,GAAO,WAAWA,EAAI,CAAC,IAAIA,CAAE,EAO/D,KAAQ,KAAO,IAAY,CAE1B,MAAMC,EAAQ,CAAC,GAAG,KAAK,iBAAiB,GAAG,CAAC,EAGtCC,EAAaC,GAA0C,CAC5D,GAAIA,aAAc,mBAAoB,CAErC,GAAIA,EAAG,KAAOL,EAAe,MAAO,GAEpC,MAAMM,EAAQD,EAAG,QAAQ,CAAC,EAC1B,GAAIC,EAAO,CACV,MAAMC,EAAM,SAASD,EAAO,EAAE,EAC9B,GAAIC,GAAO,KAAK,MAAQA,GAAO,KAAK,KAAM,MAAO,EAClD,CACD,CACA,MAAO,EACR,EAGMC,EAAqBH,GAAkD,CAC5E,GAAI,CAACA,EAAI,OAAO,KAChB,MAAMI,EAASJ,EACf,KAAOA,GAAI,CACV,GAAID,EAAUC,CAAE,EAAG,OAAOA,EAG1B,IADAA,EAAKA,EAAG,uBACDA,GAAI,kBACVA,EAAKA,EAAG,iBAGT,MAAMK,EAAIF,EAAkBH,CAAE,EAC9B,GAAIK,EAAG,OAAOA,CACf,CAEA,OAAOF,EAAkBC,EAAO,aAAa,CAC9C,EAGME,EAA4CC,GAAY,CAC7D,SAAW,CAAE,eAAAC,EAAgB,OAAAC,CAAA,IAAYF,EAAS,CACjD,GAAI,CAACC,EAAgB,SACrB,MAAME,EAAUP,EAAkBM,CAAM,EACxC,GAAI,CAACC,EAAS,SACd,MAAMC,EAAOb,EAAM,KAAMa,GAASA,EAAK,OAAS,IAAM,mBAAmBD,EAAQ,EAAE,CAAC,EACpF,GAAIC,EAAM,CACT,KAAK,QAAUA,EACf,KACD,CACD,CACD,EAKMC,EAAY,SAAS,iBAAiB,6CAA6C,EAEzF,IAAIC,EACJ,MAAMC,EAAU,IAAM,CACjBD,IACJA,EAAW,IAAI,qBAAqBP,EAAY,CAAE,WAAY,KAAK,cAAA,EAAiB,EACpFM,EAAU,QAASP,GAAMQ,EAAU,QAAQR,CAAC,CAAC,EAC9C,EACAS,EAAA,EAEA,IAAIC,EACJ,OAAO,iBAAiB,SAAU,IAAM,CAEnCF,IACHA,EAAS,WAAA,EACTA,EAAW,QAEZ,aAAaE,CAAO,EACpBA,EAAU,WAAW,IAAM,KAAK,OAAOD,CAAO,EAAG,GAAG,CACrD,CAAC,CACF,EA9EC,KAAK,OAAO,IAAM,KAAK,KAAA,CAAM,CAC9B,CAbA,IAAc,QAAQH,EAAyB,CAC1CA,IAAS,KAAK,WACd,KAAK,UAAU,KAAK,SAAS,gBAAgB,cAAc,EAC/DA,EAAK,aAAa,eAAgB,MAAM,EACxC,KAAK,SAAWA,EACjB,CAuFQ,eAA+C,CACtD,MAAMK,EAAe,SAAS,cAAc,QAAQ,GAAG,sBAAA,EAAwB,QAAU,EAEnFC,EAAkB,KAAK,cAAc,SAAS,GAAG,sBAAA,EAAwB,QAAU,EAEnFC,EAAMF,EAAeC,EAAkB,GAEvCE,EAASD,EAAM,GACfE,EAAS,SAAS,gBAAgB,aACxC,MAAO,IAAIF,CAAG,SAASC,EAASC,CAAM,IACvC,CACD,CAEA,eAAe,OAAO,gBAAiBxB,CAAY","x_google_ignoreList":[0,1]}