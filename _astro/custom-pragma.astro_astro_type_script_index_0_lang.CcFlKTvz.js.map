{"version":3,"file":"custom-pragma.astro_astro_type_script_index_0_lang.CcFlKTvz.js","sources":["../../src/components/experiments/page-react-extension/stack/click-listener.ts","../../src/pages/experiments/react-extension/custom-pragma.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["import type { Fiber } from \"bippy\";\nimport { getFiberFromElement, getFiberName } from \"../fiber\";\nimport { formatStack } from \"./_utils\";\n\nexport const startClickListening = () => {\n  document.addEventListener(\"click\", (event) => {\n    const target = event.target as EventTarget;\n    const fiber = getFiberFromElement(target);\n    if (!fiber) {\n      return;\n    }\n    const formattedErrorStack = [];\n    let current: Fiber | null = fiber;\n    while (current) {\n      console.log(\"current.pendingProps\", current.pendingProps);\n      if (!current.pendingProps) {\n        console.log(current);\n      }\n      // @ts-expect-error\n      const foundStackViaProps = window._DEBUG_MAPPED_PROPS.get(\n        current.pendingProps,\n      );\n\n      if (foundStackViaProps) {\n        formattedErrorStack.push(formatStack(foundStackViaProps));\n      } else {\n        console.warn(\n          `[CUSTOM] No stack for \"${current.elementType?.name}\"`,\n          current,\n        );\n      }\n      if (current.return === current) {\n        // console.log(\"INF\");\n        break;\n      }\n      current = current.return;\n    }\n    console.log(\n      \"[CUSTOM] Clicked on \" +\n        [getFiberName(fiber), \"\\n\", ...formattedErrorStack].join(\"\"),\n    );\n\n    const error = new Error(`[CUSTOM] Clicked on ${getFiberName(fiber)}`);\n    error.stack = formattedErrorStack.join(\"\");\n\n    window.DD_RUM.addError(error);\n  });\n};\n","      import { startClickListening } from \"@components/experiments/page-react-extension/stack/click-listener\";\n      startClickListening();\n    \n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyAidmVyc2lvbiI6IDMsICJzb3VyY2VzIjogWyIvaG9tZS9ydW5uZXIvd29yay9heWMwLmdpdGh1Yi5pby9heWMwLmdpdGh1Yi5pby9zcmMvcGFnZXMvZXhwZXJpbWVudHMvcmVhY3QtZXh0ZW5zaW9uL2N1c3RvbS1wcmFnbWEuYXN0cm8iXSwgInNvdXJjZXNDb250ZW50IjogWyItLS1cbi8vIEB0cy1leHBlY3QtZXJyb3JcbmltcG9ydCB7IEN1c3RvbVByYWdtYSB9IGZyb20gXCJAY29tcG9uZW50cy9leHBlcmltZW50cy9wYWdlLXJlYWN0LWV4dGVuc2lvbi9zdGFjay9DdXN0b21QcmFnbWFcIjtcbmltcG9ydCBBbmFseXRpY3MgZnJvbSBcIkBjb21wb25lbnRzL0FuYWx5dGljcy5hc3Ryb1wiO1xuLS0tXG5cblx1MDAzYyFkb2N0eXBlIGh0bWxcdTAwM2Vcblx1MDAzY2h0bWwgbGFuZz1cImVuXCJcdTAwM2VcbiAgXHUwMDNjaGVhZFx1MDAzZVxuICAgIFx1MDAzY21ldGEgY2hhcnNldD1cIlVURi04XCIgL1x1MDAzZVxuICAgIFx1MDAzY21ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLjBcIiAvXHUwMDNlXG4gICAgXHUwMDNjdGl0bGVcdTAwM2VFeHBlcmltZW50LXJlYWN0XHUwMDNjL3RpdGxlXHUwMDNlXG4gIFx1MDAzYy9oZWFkXHUwMDNlXG4gIFx1MDAzY2JvZHlcdTAwM2VcbiAgICBcdTAwM2NzY3JpcHQgc3JjPVwiQGNvbXBvbmVudHMvZXhwZXJpbWVudHMvcGFnZS1yZWFjdC1leHRlbnNpb24vZXh0ZW5zaW9uLmpzXCJcbiAgICBcdTAwM2VcdTAwM2Mvc2NyaXB0XHUwMDNlXG5cbiAgICBcdTAwM2NzY3JpcHQgaXM6aW5saW5lXHUwMDNlXG4gICAgICBhZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIiwgKGV2ZW50KSA9XHUwMDNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yXCIsIHsgZXZlbnQsIGVycm9yOiBldmVudC5lcnJvciB9KTtcbiAgICAgIH0pO1xuICAgIFx1MDAzYy9zY3JpcHRcdTAwM2VcblxuICAgIFx1MDAzY0N1c3RvbVByYWdtYSBjbGllbnQ6b25seSAvXHUwMDNlXG5cbiAgICBcdTAwM2NBbmFseXRpY3MgL1x1MDAzZVxuXG4gICAgXHUwMDNjc2NyaXB0XHUwMDNlXG4gICAgICBpbXBvcnQgeyBzdGFydENsaWNrTGlzdGVuaW5nIH0gZnJvbSBcIkBjb21wb25lbnRzL2V4cGVyaW1lbnRzL3BhZ2UtcmVhY3QtZXh0ZW5zaW9uL3N0YWNrL2NsaWNrLWxpc3RlbmVyXCI7XG4gICAgICBzdGFydENsaWNrTGlzdGVuaW5nKCk7XG4gICAgXHUwMDNjL3NjcmlwdFx1MDAzZVxuICBcdTAwM2MvYm9keVx1MDAzZVxuXHUwMDNjL2h0bWxcdTAwM2UiXSwgIm1hcHBpbmdzIjogIkFBNEJBLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0I7QUFBQTsiLCAibmFtZXMiOiBbXSB9"],"names":["startClickListening","event","target","fiber","getFiberFromElement","formattedErrorStack","current","foundStackViaProps","formatStack","getFiberName","error"],"mappings":"yJAIO,MAAMA,EAAsB,IAAM,CAC9B,SAAA,iBAAiB,QAAUC,GAAU,CAC5C,MAAMC,EAASD,EAAM,OACfE,EAAQC,EAAoBF,CAAM,EACxC,GAAI,CAACC,EACH,OAEF,MAAME,EAAsB,CAAC,EAC7B,IAAIC,EAAwBH,EAC5B,KAAOG,GAAS,CACN,QAAA,IAAI,uBAAwBA,EAAQ,YAAY,EACnDA,EAAQ,cACX,QAAQ,IAAIA,CAAO,EAGf,MAAAC,EAAqB,OAAO,oBAAoB,IACpDD,EAAQ,YACV,EAUI,GARAC,EACkBF,EAAA,KAAKG,EAAYD,CAAkB,CAAC,EAEhD,QAAA,KACN,0BAA0BD,EAAQ,aAAa,IAAI,IACnDA,CACF,EAEEA,EAAQ,SAAWA,EAErB,MAEFA,EAAUA,EAAQ,MAAA,CAEZ,QAAA,IACN,uBACE,CAACG,EAAaN,CAAK,EAAG;AAAA,EAAM,GAAGE,CAAmB,EAAE,KAAK,EAAE,CAC/D,EAEA,MAAMK,EAAQ,IAAI,MAAM,uBAAuBD,EAAaN,CAAK,CAAC,EAAE,EAC9DO,EAAA,MAAQL,EAAoB,KAAK,EAAE,EAElC,OAAA,OAAO,SAASK,CAAK,CAAA,CAC7B,CACH,EClBMV,EAAoB"}