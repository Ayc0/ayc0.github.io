{"version":3,"file":"CustomPragma.D_NCLPK3.js","sources":["../../src/components/experiments/page-react-extension/stack/_utils.ts","../../src/components/experiments/page-react-extension/stack/on-click.ts","../../src/components/experiments/page-react-extension/stack/CustomPragma.tsx"],"sourcesContent":["import * as React from \"react\";\nimport type { Fiber } from \"bippy\";\n\n// Copied from https://github.com/facebook/react/blob/da996a15be4f14aeb9726037f4559ff1cb3c2600/packages/shared/DefaultPrepareStackTraceV8.js\n// function DefaultPrepareStackTrace(\n//   error: Error,\n//   structuredStackTrace: any[],\n// ): string {\n//   const name = error.name || \"Error\";\n//   const message = error.message || \"\";\n//   let stack = name + \": \" + message;\n//   for (let i = 0; i < structuredStackTrace.length; i++) {\n//     stack += \"\\n    at \" + structuredStackTrace[i].toString();\n//   }\n//   return stack;\n// }\n\n// Inspired from https://github.com/facebook/react/blob/4a9df08157f001c01b078d259748512211233dcf/packages/shared/ReactOwnerStackFrames.js#L12 but swapped `react-stack-top-frame` with `========`\nfunction formatStack(error: Error): string {\n  // const prevPrepareStackTrace = Error.prepareStackTrace;\n  // Error.prepareStackTrace = DefaultPrepareStackTrace;\n  let stack = error.stack!;\n  // Error.prepareStackTrace = prevPrepareStackTrace;\n  if (stack.startsWith(\"Error: ========\\n\")) {\n    // V8's default formatting prefixes with the error message which we\n    // don't want/need.\n    stack = stack.slice(\"Error: ========\\n\".length);\n  }\n  let idx = stack.indexOf(\"\\n\");\n  if (idx !== -1) {\n    // Pop the h frame.\n    // For Chrome & FF\n    stack = stack.slice(idx + 1);\n    // We could use `Error.captureStackTrace(debugStack, h)` in the h function, but it doesn't work in Firefox and older browsers\n  }\n\n  // Only keep 1 line:\n  idx = stack.indexOf(\"\\n\");\n  if (idx !== -1) {\n    // Pop the h frame.\n    // For Chrome & FF\n    stack = stack.slice(0, idx + 1);\n  }\n\n  // react-stack-bottom-frame only exists in __DEV__, so can't be used for prod build\n  idx = stack.indexOf(\"react-stack-bottom-frame\");\n  if (idx === 0) {\n    return \"\";\n  }\n  if (idx !== -1) {\n    idx = stack.lastIndexOf(\"\\n\", idx);\n  }\n  if (idx !== -1) {\n    // Cut off everything after the bottom frame since it'll be internals.\n    stack = stack.slice(0, idx);\n  } else {\n    // We didn't find any internal callsite out to user space.\n    // This means that this was called outside an owner or the owner is fully internal.\n    // To keep things light we exclude the entire trace in this case.\n    // Difference from copied code: I commented this out to keep the full stack\n    // return \"\";\n  }\n  return stack;\n}\n\nexport function getStackFromFiber(fiber: Fiber, message?: string) {\n  const formattedErrorStack = [];\n  let current: Fiber | null = fiber;\n\n  while (current) {\n    console.log(\"current.pendingProps\", current.pendingProps);\n    if (!current.pendingProps) {\n      console.log(current);\n    }\n    // @ts-expect-error\n    const foundStackViaProps = window._DEBUG_MAPPED_PROPS.get(\n      current.pendingProps,\n    );\n\n    if (foundStackViaProps) {\n      formattedErrorStack.push(formatStack(foundStackViaProps));\n    } else {\n      console.warn(\n        `[CUSTOM] No stack for \"${current.elementType?.name}\"`,\n        current,\n      );\n    }\n    if (current.return === current) {\n      break;\n    }\n    current = current.return;\n  }\n\n  const error = new Error(message);\n  error.stack = (message ? message + \"\\n\" : \"\") + formattedErrorStack.join(\"\");\n\n  return error;\n}\n\n// Every JSX created is mapped to unique objects. So we can identify every render of every JSX with the props\n// And even when we do `<div />` or `React.createElement('div')`, or `React.createElement('div', null)`, React uses `{}` in the end for the created props\n// See https://github.com/facebook/react/blob/ef4bc8b4f91023afac437be9179beef350b32db3/packages/react/src/jsx/ReactJSXElement.js#L658-L659\n// The only one I noticed that was `null` here was the root of the app, which we frankly don't care about\nconst MAPPED_PROPS = new WeakMap<any, Error>();\nconst conflictProps = new WeakSet<any>();\n\n// @ts-expect-error\nwindow._DEBUG_MAPPED_PROPS = MAPPED_PROPS;\n\nexport function h(type: any, ...args: any[]) {\n  // Note: those don't work nicely:\n  // - with class in Firefox: only display `render`, not `ComponentName.render`\n  // - in Safari: only `h` appears, not the component render\n  const debugStack = new Error(\"========\");\n\n  // Re-enable this comment to see the full pretty error when the React devtools are installed\n  // console.error(\"HA\");\n  // console.log(\"[CUSTOM] stack\", {\n  //   raw: debugStack.stack?.split(\"\\n\"),\n  //   formatted: formatStack(debugStack),\n  // });\n\n  // When converting ReactElement to Fiber, only the type & the props are passed, so we can only play with those 2\n  // See https://github.com/facebook/react/blob/da996a15be4f14aeb9726037f4559ff1cb3c2600/packages/react-reconciler/src/ReactFiber.js#L746-L756 or https://github.com/facebook/react/blob/da996a15be4f14aeb9726037f4559ff1cb3c2600/packages/react-reconciler/src/ReactFiber.js#L546\n\n  const element = React.createElement(type, ...args);\n\n  if (element.props) {\n    if (MAPPED_PROPS.has(element.props)) {\n      console.warn(\n        \"[CUSTOM][PROPS] THIS SHOULD NOT EXIST: CONFLICT ON \",\n        element.props,\n        element,\n      );\n      MAPPED_PROPS.delete(element.props);\n      conflictProps.add(element.props);\n    }\n    if (!conflictProps.has(element.props)) {\n      MAPPED_PROPS.set(element.props, debugStack);\n    }\n  }\n\n  return element;\n}\n\n// To make custom pragma work with TS\nexport namespace h {\n  export namespace JSX {\n    export interface IntrinsicElements extends React.JSX.IntrinsicElements {}\n  }\n}\n","import { getFiberFromElement, getFiberName } from \"../fiber\";\nimport { getStackFromFiber } from \"./_utils\";\n\nexport const onClick = (event: React.MouseEvent) => {\n  const target = event.target as EventTarget;\n  const fiber = getFiberFromElement(target);\n  if (!fiber) {\n    return;\n  }\n\n  const error = getStackFromFiber(\n    fiber,\n    `[CUSTOM] Clicked on ${getFiberName(fiber)}`,\n  );\n\n  console.log(error.stack);\n\n  window.DD_RUM?.addError(error);\n};\n","/** @jsxRuntime classic */\n/** @jsx h */\n\n// TO: make it work with automatic and jsx & jsx-automatic etc.\n\nimport * as React from \"react\";\n\nimport { getStackFromFiber, h } from \"./_utils\";\n\nimport { onClick } from \"./on-click\";\n\nfunction FC() {\n  return <button>Function</button>;\n}\n\nconst MemoizedNamed = React.memo(function MemoizedInternal() {\n  return <button>Memoized with an internal name</button>;\n});\nconst MemoizedAnonymous = React.memo(() => {\n  return <button>Memoized anonymous</button>;\n});\n\nconst ForwardedRefNamed = React.forwardRef(function ForwardedRefInternal() {\n  return <button>ForwardedRef with an internal name</button>;\n});\nconst ForwardedRefAnonymous = React.forwardRef(() => {\n  return <button>ForwardedRef anonymous</button>;\n});\n\nclass Class extends React.Component<any> {\n  override render() {\n    console.log(\n      \"[CUSTOM] Test component render log in all browser dev tools\",\n      new Error().stack,\n    );\n    console.trace();\n    // console.log(\"Class current fiber:\", this._reactInternals);\n    return <button>Class</button>;\n  }\n}\n\nconst TrackingContext = React.createContext<Error | undefined>(undefined);\n\nconst useTrackingError = () => {\n  const wrappingTrackingError = React.useContext(TrackingContext);\n\n  const trackingError = new Error(undefined, {\n    cause: wrappingTrackingError,\n  });\n\n  // `captureStackTrace` is not available in Firefox / older browsers\n  if (\"captureStackTrace\" in Error) {\n    // Avoid reporting `useErrorContext` in the stack trace to have the real source of the error\n    Error.captureStackTrace(trackingError, useTrackingError);\n  }\n\n  function mergeErrorWithTracking(error: Error) {\n    const trackedError = new Error(error.message, {\n      cause: trackingError,\n    });\n\n    // `captureStackTrace` is not available in Firefox / older browsers\n    if (\"captureStackTrace\" in Error) {\n      // Avoid reporting `useErrorContext` in the stack trace to have the real source of the error\n      Error.captureStackTrace(trackedError, mergeErrorWithTracking);\n    }\n\n    return trackedError;\n  }\n\n  return mergeErrorWithTracking;\n};\n\nfunction useC() {\n  const mergeErrorWithTracking = useTrackingError();\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      fetch(\"https://ayc0.github.io/unknown\")\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(`Fetch error: ${res.status}`);\n          }\n        })\n        .catch((error) => {\n          window.DD_RUM?.addError(mergeErrorWithTracking(error));\n        });\n    }, 100);\n  }, []);\n}\n\nfunction useB() {\n  useC();\n}\n\nfunction useA() {\n  useB();\n}\n\nfunction TrackHook() {\n  useA();\n  return <div>Hook</div>;\n}\n\nconst withTracking = <P,>(Component: React.ComponentType<P>) => {\n  class WrappedComponent extends React.Component<P> {\n    override render() {\n      // @ts-expect-error\n      const thisFiber = getStackFromFiber(this._reactInternals);\n\n      return (\n        <TrackingContext.Provider value={thisFiber}>\n          <Component {...this.props} />\n        </TrackingContext.Provider>\n      );\n    }\n  }\n\n  return WrappedComponent;\n};\n\nconst TrackHookSurroundedByContext = withTracking(TrackHook);\n\nexport const CustomPragma = () => {\n  return (\n    <fieldset\n      style={{ display: \"inline\", border: \"1px dashed blue\" }}\n      onClick={onClick}\n    >\n      <legend>Click Tracker</legend>\n\n      {/* Render FC twice, to see how we work with same element twice */}\n      <FC />\n      <FC />\n\n      <hr />\n\n      <Class with={{ props: true }} />\n\n      <hr />\n\n      <MemoizedNamed />\n      <MemoizedAnonymous />\n\n      <hr />\n\n      <ForwardedRefNamed />\n      <ForwardedRefAnonymous />\n\n      <hr />\n\n      <TrackHook />\n      <TrackHookSurroundedByContext />\n    </fieldset>\n  );\n};\n"],"names":["formatStack","error","stack","idx","getStackFromFiber","fiber","message","formattedErrorStack","current","foundStackViaProps","MAPPED_PROPS","conflictProps","h","type","args","debugStack","element","React.createElement","onClick","event","target","getFiberFromElement","getFiberName","FC","MemoizedNamed","React.memo","MemoizedAnonymous","ForwardedRefNamed","React.forwardRef","ForwardedRefAnonymous","Class","React.Component","TrackingContext","React.createContext","useTrackingError","wrappingTrackingError","React.useContext","trackingError","mergeErrorWithTracking","trackedError","useC","React.useEffect","res","useB","useA","TrackHook","withTracking","Component","WrappedComponent","thisFiber","TrackHookSurroundedByContext","CustomPragma"],"mappings":"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"}