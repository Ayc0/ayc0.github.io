{"version":3,"file":"fiber.CKOhICgk.js","sources":["../../src/components/experiments/page-react-extension/fiber.ts"],"sourcesContent":["import { getFiberStack, getDisplayName, type Fiber } from \"bippy\";\n\nexport function getFiberName(fiber: Fiber | null) {\n  if (!fiber) {\n    return null;\n  }\n  if (typeof fiber.type === \"string\") {\n    return fiber.type;\n  }\n  return getDisplayName(fiber);\n}\n\nexport function getFiberFromElement(element: EventTarget) {\n  const keys = Object.keys(element);\n  const reactFiberKey = keys.find((key) => key.startsWith(\"__reactFiber$\"));\n  if (!reactFiberKey) {\n    return undefined;\n  }\n  // @ts-expect-error\n  const fiber = element[reactFiberKey] as Fiber;\n  return fiber;\n}\n\nexport function getRoot(fiber: Fiber) {\n  let current = fiber;\n  while (current.return) {\n    current = current.return;\n  }\n  return current.stateNode;\n}\n\nexport function getFiberData(fiber: Fiber | null) {\n  return {\n    fiberName: getFiberName(fiber),\n    fiberStack: fiber\n      ? getFiberStack(fiber)\n          .map(getFiberName)\n          .filter(Boolean)\n          .reverse()\n          .join(\" > \")\n      : null,\n  };\n}\n"],"names":["getFiberName","fiber","getDisplayName","getFiberFromElement","element","reactFiberKey","key","getFiberData","getFiberStack"],"mappings":"wDAEO,SAASA,EAAaC,EAAqB,CAChD,OAAKA,EAGD,OAAOA,EAAM,MAAS,SACjBA,EAAM,KAERC,EAAeD,CAAK,EALlB,IAMX,CAEO,SAASE,EAAoBC,EAAsB,CAElD,MAAAC,EADO,OAAO,KAAKD,CAAO,EACL,KAAME,GAAQA,EAAI,WAAW,eAAe,CAAC,EACxE,OAAKD,EAISD,EAAQC,CAAa,EAH1B,MAKX,CAUO,SAASE,EAAaN,EAAqB,CACzC,MAAA,CACL,UAAWD,EAAaC,CAAK,EAC7B,WAAYA,EACRO,EAAcP,CAAK,EAChB,IAAID,CAAY,EAChB,OAAO,OAAO,EACd,QACA,EAAA,KAAK,KAAK,EACb,IACN,CACF"}