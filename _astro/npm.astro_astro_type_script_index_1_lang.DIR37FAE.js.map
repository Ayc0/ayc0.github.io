{"version":3,"file":"npm.astro_astro_type_script_index_1_lang.DIR37FAE.js","sources":["../../src/components/experiments/page-react-extension/npm/App.tsx","../../src/components/experiments/page-react-extension/npm/index.tsx"],"sourcesContent":["import * as React from \"react\";\n// import { getFiberStack, getDisplayName, type Fiber } from \"bippy\";\nimport { getFiberData, getFiberFromElement } from \"../fiber\";\nimport { getErrorStackFromInfo } from \"../error\";\n\nclass ErrorBoundary extends React.Component<\n  React.PropsWithChildren<{ fallback?: React.ReactNode }>,\n  { hasError: boolean }\n> {\n  constructor(props: React.PropsWithChildren<{ fallback?: React.ReactNode }>) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static displayName = \"ErrorBoundary\";\n\n  static getDerivedStateFromError(_error: Error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  override componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.log(\"[CUSTOM] componentDidCatch\", {\n      errorStack: getErrorStackFromInfo(errorInfo),\n      error,\n    });\n  }\n\n  override render() {\n    if (this.state.hasError) {\n      return this.props.fallback || null;\n    }\n\n    return (\n      <fieldset style={{ display: \"inline\", border: \"1px solid red\" }}>\n        <legend>Error Boundary</legend>\n        {this.props.children}\n      </fieldset>\n    );\n  }\n}\n\nconst ErrorThrowerOnClick = () => {\n  return (\n    <button\n      onClick={() => {\n        throw new Error(\"Hello\");\n      }}\n    >\n      Trigger ðŸ’¥ crash (in onClick)\n    </button>\n  );\n};\nErrorThrowerOnClick.displayName = \"ErrorThrowerOnClick\";\n\nfunction ErrorThrowerOnRender() {\n  const [aaaa, setAaaa] = React.useState(false);\n  if (aaaa) {\n    throw new Error(\"Hello\");\n  }\n  return (\n    <button\n      onClick={() => {\n        setAaaa(true);\n      }}\n    >\n      Trigger ðŸ’¥ crash (on render)\n    </button>\n  );\n}\nErrorThrowerOnRender.displayName = \"ErrorThrowerOnRender\";\n\nconst ErrorThrowerOnEffect = () => {\n  const [aaaa, setAaaa] = React.useState(false);\n\n  React.useEffect(() => {\n    if (aaaa) {\n      throw new Error(\"Hello\");\n    }\n  }, [aaaa]);\n\n  return (\n    <button\n      onClick={() => {\n        setAaaa(true);\n      }}\n    >\n      Trigger ðŸ’¥ crash (on effect)\n    </button>\n  );\n};\nErrorThrowerOnEffect.displayName = \"ErrorThrowerOnEffect\";\n\nconst ClickTracker = ({ children }: { children?: React.ReactNode }) => {\n  return (\n    <fieldset\n      style={{ display: \"inline\", border: \"1px dashed blue\" }}\n      onClick={(event) => {\n        const fiber = getFiberFromElement(event.target);\n        if (!fiber) {\n          return;\n        }\n        const fiberData = getFiberData(fiber);\n        console.log(\"[CUSTOM] Clicked on\", {\n          element: event.target,\n          fiber: fiber,\n          ...fiberData,\n        });\n      }}\n    >\n      <legend>Click Tracker</legend>\n      {children}\n    </fieldset>\n  );\n};\nClickTracker.displayName = \"ClickTracker\";\n\nconst Bar = () => {\n  return (\n    <ClickTracker>\n      <ErrorThrowerOnClick />\n      <ErrorThrowerOnRender />\n      <ErrorThrowerOnEffect />\n\n      <ErrorBoundary>\n        <ErrorThrowerOnClick />\n        <ErrorThrowerOnRender />\n        <ErrorThrowerOnEffect />\n      </ErrorBoundary>\n    </ClickTracker>\n  );\n};\nBar.displayName = \"Bar\";\n\nconst Foo = () => {\n  return <Bar />;\n};\nFoo.displayName = \"Foo\";\n\nexport const App = () => {\n  return (\n    <>\n      <div>Hello World</div>\n      <Foo />\n    </>\n  );\n};\nApp.displayName = \"App\";\n","// import { instrument, secure } from \"bippy\"; // must be imported BEFORE react\nimport * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport { App } from \"./App\";\nimport type { Fiber } from \"bippy\";\n// import { getMutatedHostFibers, instrument, secure, type Fiber } from \"bippy\";\nimport { getFiberData /* , getRoot */ } from \"../fiber\";\nimport { getErrorStackFromInfo } from \"../error\";\n\n// instrument(\n//   secure({\n//     onCommitFiberRoot(rendererID, root) {\n//       console.log(\"root ready to commit\", rendererID, root);\n//       console.log(getMutatedHostFibers(root.current));\n//     },\n//     onPostCommitFiberRoot(rendererID, root) {\n//       console.log(\"root with effects committed\", rendererID, root);\n//     },\n//     onCommitFiberUnmount(rendererID, fiber) {\n//       console.log(\"fiber unmounted\", rendererID, fiber);\n//     },\n//   }),\n// );\n\nconst button = document.getElementById(\"button\") as HTMLButtonElement;\n\nbutton.addEventListener(\"click\", () => {\n  createRoot(document.getElementById(`node`)!, {\n    onCaughtError(_error, errorInfo) {\n      // @ts-expect-error\n      const fiber = errorInfo.errorBoundary?._reactInternals as\n        | Fiber\n        | undefined;\n\n      // TODO: even with displayName, getErrorStackFromInfo(errorInfo) can use the minified version. Why may want to go through the fiber manually to match the error stack, or via source maps\n      console.log(\"[CUSTOM] Error caught by Error Boundary\", {\n        boundaryStack: fiber ? getFiberData(fiber).fiberStack : null,\n        errorStack: getErrorStackFromInfo(errorInfo),\n      });\n\n      // console.log(\"onCaughtError\", {\n      // error,\n      // errorInfo,\n      // fiber,\n      // // mutated: getMutatedHostFibers(fiber),\n      // root: getRoot(fiber),\n      // updatedNode: getRoot(fiber)\n      //   .pendingUpdatersLaneMap.flatMap((lane) => [...lane])\n      //   .map(getFiberData),\n      // mutatedRoot: getMutatedHostFibers(getRoot(fiber)),\n      // fiberData: getFiberData(fiber),\n      // returnData: getFiberData(fiber.return),\n      // });\n      // console.dir(error);\n      // console.dir(errorInfo);\n    },\n\n    onUncaughtError(error, errorInfo) {\n      // console.log(\"onUncaughtError\", { error, errorInfo });\n      console.log(\"[CUSTOM] Error not caught by Error Boundary\", {\n        errorStack: getErrorStackFromInfo(errorInfo),\n        error,\n      });\n    },\n\n    onRecoverableError(error, errorInfo) {\n      console.log(\"[CUSTOM] Recoverable error\", {\n        errorStack: getErrorStackFromInfo(errorInfo),\n        error,\n      });\n    },\n  }).render(<App />);\n  button.disabled = true;\n});\n"],"names":["ErrorBoundary","React.Component","props","_error","error","errorInfo","getErrorStackFromInfo","jsxs","jsx","ErrorThrowerOnClick","ErrorThrowerOnRender","aaaa","setAaaa","React.useState","ErrorThrowerOnEffect","React.useEffect","ClickTracker","children","event","fiber","getFiberFromElement","fiberData","getFiberData","Bar","Foo","App","Fragment","button","createRoot"],"mappings":"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"}