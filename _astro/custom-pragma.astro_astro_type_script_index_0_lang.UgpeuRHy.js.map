{"version":3,"file":"custom-pragma.astro_astro_type_script_index_0_lang.UgpeuRHy.js","sources":["../../src/components/experiments/page-react-extension/stack/click-listener.ts","../../src/pages/experiments/react-extension/custom-pragma.astro?astro&type=script&index=0&lang.ts"],"sourcesContent":["import type { Fiber } from \"bippy\";\nimport { getFiberFromElement, getFiberName } from \"../fiber\";\nimport { formatStack } from \"./_utils\";\n\nexport const startClickListening = () => {\n  document.addEventListener(\"click\", (event) => {\n    const target = event.target as EventTarget;\n    const fiber = getFiberFromElement(target);\n    if (!fiber) {\n      return;\n    }\n    const formattedErrorStack = [];\n    let current: Fiber | null = fiber;\n    while (current) {\n      // @ts-expect-error\n      const foundStackViaType = window._DEBUG_MAPPED_TYPES.get(\n        current.elementType,\n      );\n\n      // @ts-expect-error\n      const foundStackViaProps = window._DEBUG_MAPPED_PROPS.get(\n        current.pendingProps,\n      );\n\n      if (\n        foundStackViaProps &&\n        foundStackViaType &&\n        foundStackViaProps !== foundStackViaType\n      ) {\n        console.error(\"[CUSTOM] CONFLICT\", {\n          current,\n          foundStackViaType,\n          foundStackViaProps,\n        });\n      }\n      const foundStack = foundStackViaProps || foundStackViaType;\n\n      if (foundStack) {\n        formattedErrorStack.push(formatStack(foundStack));\n      } else {\n        console.warn(\n          \"[CUSTOM] No stack for\",\n          current.elementType?.name,\n          current,\n        );\n      }\n      if (current.return === current) {\n        // console.log(\"INF\");\n        break;\n      }\n      current = current.return;\n    }\n    console.log(\n      \"[CUSTOM] Clicked on \" +\n        [getFiberName(fiber), \"\\n\", ...formattedErrorStack].join(\"\"),\n    );\n  });\n};\n","      import { startClickListening } from \"@components/experiments/page-react-extension/stack/click-listener\";\n      startClickListening();\n    \n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyAidmVyc2lvbiI6IDMsICJzb3VyY2VzIjogWyIvaG9tZS9ydW5uZXIvd29yay9heWMwLmdpdGh1Yi5pby9heWMwLmdpdGh1Yi5pby9zcmMvcGFnZXMvZXhwZXJpbWVudHMvcmVhY3QtZXh0ZW5zaW9uL2N1c3RvbS1wcmFnbWEuYXN0cm8iXSwgInNvdXJjZXNDb250ZW50IjogWyItLS1cbi8vIEB0cy1leHBlY3QtZXJyb3JcbmltcG9ydCB7IEN1c3RvbVByYWdtYSB9IGZyb20gXCJAY29tcG9uZW50cy9leHBlcmltZW50cy9wYWdlLXJlYWN0LWV4dGVuc2lvbi9zdGFjay9DdXN0b21QcmFnbWFcIjtcbi0tLVxuXG5cdTAwM2MhZG9jdHlwZSBodG1sXHUwMDNlXG5cdTAwM2NodG1sIGxhbmc9XCJlblwiXHUwMDNlXG4gIFx1MDAzY2hlYWRcdTAwM2VcbiAgICBcdTAwM2NtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiIC9cdTAwM2VcbiAgICBcdTAwM2NtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wXCIgL1x1MDAzZVxuICAgIFx1MDAzY3RpdGxlXHUwMDNlRXhwZXJpbWVudC1yZWFjdFx1MDAzYy90aXRsZVx1MDAzZVxuICBcdTAwM2MvaGVhZFx1MDAzZVxuICBcdTAwM2Nib2R5XHUwMDNlXG4gICAgXHUwMDNjc2NyaXB0IHNyYz1cIkBjb21wb25lbnRzL2V4cGVyaW1lbnRzL3BhZ2UtcmVhY3QtZXh0ZW5zaW9uL2V4dGVuc2lvbi5qc1wiXG4gICAgXHUwMDNlXHUwMDNjL3NjcmlwdFx1MDAzZVxuXG4gICAgXHUwMDNjc2NyaXB0IGlzOmlubGluZVx1MDAzZVxuICAgICAgYWRkRXZlbnRMaXN0ZW5lcihcImVycm9yXCIsIChldmVudCkgPVx1MDAzZSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvclwiLCB7IGV2ZW50LCBlcnJvcjogZXZlbnQuZXJyb3IgfSk7XG4gICAgICB9KTtcbiAgICBcdTAwM2Mvc2NyaXB0XHUwMDNlXG5cbiAgICBcdTAwM2NDdXN0b21QcmFnbWEgY2xpZW50Om9ubHkgL1x1MDAzZVxuXG4gICAgXHUwMDNjc2NyaXB0XHUwMDNlXG4gICAgICBpbXBvcnQgeyBzdGFydENsaWNrTGlzdGVuaW5nIH0gZnJvbSBcIkBjb21wb25lbnRzL2V4cGVyaW1lbnRzL3BhZ2UtcmVhY3QtZXh0ZW5zaW9uL3N0YWNrL2NsaWNrLWxpc3RlbmVyXCI7XG4gICAgICBzdGFydENsaWNrTGlzdGVuaW5nKCk7XG4gICAgXHUwMDNjL3NjcmlwdFx1MDAzZVxuICBcdTAwM2MvYm9keVx1MDAzZVxuXHUwMDNjL2h0bWxcdTAwM2UiXSwgIm1hcHBpbmdzIjogIkFBeUJBLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzdHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDM0I7QUFBQTsiLCAibmFtZXMiOiBbXSB9"],"names":["startClickListening","event","target","fiber","getFiberFromElement","formattedErrorStack","current","foundStackViaType","foundStackViaProps","foundStack","formatStack","getFiberName"],"mappings":"oJAIO,MAAMA,EAAsB,IAAM,CAC9B,SAAA,iBAAiB,QAAUC,GAAU,CAC5C,MAAMC,EAASD,EAAM,OACfE,EAAQC,EAAoBF,CAAM,EACxC,GAAI,CAACC,EACH,OAEF,MAAME,EAAsB,CAAC,EAC7B,IAAIC,EAAwBH,EAC5B,KAAOG,GAAS,CAER,MAAAC,EAAoB,OAAO,oBAAoB,IACnDD,EAAQ,WACV,EAGME,EAAqB,OAAO,oBAAoB,IACpDF,EAAQ,YACV,EAGEE,GACAD,GACAC,IAAuBD,GAEvB,QAAQ,MAAM,oBAAqB,CACjC,QAAAD,EACA,kBAAAC,EACA,mBAAAC,CAAA,CACD,EAEH,MAAMC,EAAaD,GAAsBD,EAWrC,GATAE,EACkBJ,EAAA,KAAKK,EAAYD,CAAU,CAAC,EAExC,QAAA,KACN,wBACAH,EAAQ,aAAa,KACrBA,CACF,EAEEA,EAAQ,SAAWA,EAErB,MAEFA,EAAUA,EAAQ,MAAA,CAEZ,QAAA,IACN,uBACE,CAACK,EAAaR,CAAK,EAAG;AAAA,EAAM,GAAGE,CAAmB,EAAE,KAAK,EAAE,CAC/D,CAAA,CACD,CACH,EC/BML,EAAoB"}