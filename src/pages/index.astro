---
import { lengthUnits } from "../components/units";
import type { Category } from "../components/units";

import { Unit } from "../components/Unit";

const backgrounds: { [category in Category]: string } = {
  Absolute: "OrangeRed",
  "Relative to font": "RebeccaPurple",
  "Percentage of viewport": "DodgerBlue",
  "Container query": "ForestGreen"
};
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta property="og:url" content="https://ayc0.github.io/length-units/" />
    <meta property="og:image" content="https://ayc0.github.io/length-units/og-image.png" />
    <title>Length units</title>
  </head>

  <body>
    <style is:global>
        :root {
  color-scheme: light dark;
  font-size: 16px;
}

h1 {
  font-size: 2rem;
}
h2 {
  font-size: 1.5rem;
}
code {
  font-size: 1rem;
}

.wrapper {
  display: grid;
  grid-template-columns: min-content min-content 1fr;
  align-items: center;
  row-gap: 4px;
  column-gap: 1em;
  margin: auto;
  max-width: 500px;
}

a {
  color: inherit;
}

:is(h1, h2, h3, h4, h5, h6)[id]::before {
  position: absolute;
  transform: translateX(-100%);
  text-decoration: underline;
  text-decoration-color: var(--color);
  color: var(--gray);
}

:is(h1, h2, h3, h4, h5, h6)[id]:has(> :first-child:is(:hover, :focus-within))::before {
  content: "#Â ";
}

.description {
  grid-column: span 2;
  min-width: 0;
  margin-bottom: 0.5em;
  margin-left: 0.5em;
}

/* Utility classes */
.whole-row {
  grid-column: 1 / -1;
}
.escape-from-layout {
  display: contents;
}
/* Colors */
:root {
  --danger: Red;
  --gray: DimGray;
}

@media (prefers-color-scheme: dark) {
  :root {
    --danger: #ff8585;
    --gray: DarkGray;
  }
}

    </style>
    <div class="wrapper">
        <h1 class="whole-row">CSS Length Units</h1>
        {Object.entries(lengthUnits).map(([category, { link, units }]) => (
          <div
            class="escape-from-layout"
            style={`--color: ${backgrounds[category as Category]}`}
          >
            <h2 id={category} class="whole-row">
              <a
                style={{ textDecorationColor: "var(--color)" }}
                href={`#${encodeURIComponent(category)}`}
              >{category}</a><span style={{ fontSize: "1.1rem", marginLeft: "1ch" }}>
                <a href={link}>(more)</a></span>
            </h2>
            {units.map(([unit, description]) => (
              <Unit client:load unit={unit} description={description} />
            ))}
          </div>
        ))}
      </div>
  </body>
</html>
