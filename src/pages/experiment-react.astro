---

---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
  </head>
  <body>
    <div id="a"></div>

    <script>
      const renderers = new Map();
      let uidCounter = 0;

      window.__REACT_DEVTOOLS_GLOBAL_HOOK__ = {
        rendererInterfaces: new Map(),
        listeners: {},

        backends: new Map(),

        // Fast Refresh for web relies on this.
        renderers,
        hasUnsupportedRendererAttached: false,

        emit: () => {},
        getFiberRoots: () => {},
        inject: (renderer) => {
          const id = ++uidCounter;
          renderers.set(id, renderer);
        },
        on: () => {},
        off: () => {},
        sub: () => {},

        // This is a legacy flag.
        // React v16 checks the hook for this to ensure DevTools is new enough.
        supportsFiber: true,

        // React Flight Client checks the hook for this to ensure DevTools is new enough.
        supportsFlight: true,

        // React calls these methods.
        checkDCE: () => {},
        onCommitFiberUnmount: () => {},
        onCommitFiberRoot: () => {},
        // React v18.0+
        onPostCommitFiberRoot: () => {},
        setStrictMode: () => {},

        // Schedule Profiler runtime helpers.
        // These internal React modules to report their own boundaries
        // which in turn enables the profiler to dim or filter internal frames.
        getInternalModuleRanges: () => {},
        registerInternalModuleStart: () => {},
        registerInternalModuleStop: () => {},
      };
    </script>

    <script
      crossorigin
      src="https://unpkg.com/react@18/umd/react.production.min.js"></script>
    <script
      crossorigin
      src="https://unpkg.com/react-dom@18/umd/react-dom.production.min.js"
    ></script>

    <!-- <script>
            ReactDOM.createRoot(document.getElementById('a')).render(
                React.createElement('div', null, 'Hello World'),
            );
        </script> -->

    <script>
      if (window.__REACT_DEVTOOLS_GLOBAL_HOOK__)
        console.log(
          [...window.__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers.values()].map(
            (renderer) => ({
              rendererPackageName: renderer.rendererPackageName,
              version: renderer.version,
              reconcilerVersion: renderer.reconcilerVersion,
            }),
          ),
        );
    </script>
  </body>
</html>
